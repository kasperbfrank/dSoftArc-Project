<?xml version="1.0" encoding="UTF-8"?>
<testrun name="SoftArc" project="SoftArc" tests="15" started="15" failures="1" errors="0" ignored="0">
  <testsuite name="hotciv.test.TestAlphaCiv" time="0.001">
    <testcase name="isRedFirstPlayerInTurn" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="shiftsPlayerOnNextTurn" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="shouldHaveOceanAt1_0" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="shouldHaveHillsAt0_1" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="shouldHaveMountainsAt2_2" classname="hotciv.test.TestAlphaCiv" time="0.001"/>
    <testcase name="shouldHavePlainsElsewhere" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="redHasArcherAndSettlerAtStart" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="blueHasLegionAtStart" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="unitCannotMoveOverMountain" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="onlyPlayerInTurnCanMovePlayersUnits" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="onlyOnePlayerAtTile" classname="hotciv.test.TestAlphaCiv" time="0.0">
      <failure>java.lang.AssertionError: Unit should not be able to move to another units location
	at org.junit.Assert.fail(Assert.java:91)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertFalse(Assert.java:68)
	at hotciv.test.TestAlphaCiv.onlyOnePlayerAtTile(TestAlphaCiv.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</failure>
    </testcase>
    <testcase name="gameStartsAtYear4000BC" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="endOfRoundAdvancesYearBy100" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="nooneHasWonBefore3000BC" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
    <testcase name="redWinsAtYear3000BC" classname="hotciv.test.TestAlphaCiv" time="0.0"/>
  </testsuite>
</testrun>
